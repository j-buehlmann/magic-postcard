import { Requester } from "./http.js";
import type { Log, Task } from "./types.js";
export declare type GetScheduleRequest = {
    id: string;
};
export declare type DeleteScheduleRequest = {
    id: string;
};
export declare type Schedule = {
    scheduled: string;
    cron: string;
    createdAt: number;
    content: {
        header: Record<string, string[]>;
        body: string;
    };
    destination: {
        type: "topic";
        topicId: string;
        url?: never;
    } | {
        type: "url";
        topicd?: never;
        url: string;
    };
    settings: {
        deadline?: number;
        notBefore?: number;
        retries?: number;
    };
};
export declare type ListLogsRequest = {
    id: string;
    cursor?: number;
};
export declare type ListLogsResponse = {
    cursor?: number;
    logs: Log[];
};
export declare type ListTasksRequest = {
    id: string;
    cursor?: number;
};
export declare type ListTasksResponse = {
    cursor?: number;
    logs: Task[];
};
export declare class Schedules {
    private readonly http;
    constructor(http: Requester);
    /**
     * Get a schedule
     */
    get(req: GetScheduleRequest): Promise<Schedule>;
    /**
     * List your schedules
     */
    list(): Promise<Schedule[]>;
    /**
     * Delete a schedule
     */
    delete(req: DeleteScheduleRequest): Promise<void>;
}
