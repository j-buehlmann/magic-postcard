import { Requester } from "./http.js";
export declare type CreateEndpointRequest = {
    /**
     * The url of the endpoint.
     */
    url: string;
    /**
     * The name of the topic to subscribe to.
     */
    topicName: string;
};
export declare type GetEndpointRequest = {
    id: string;
};
export declare type UpdateEndpointRequest = {
    id: string;
    url?: string;
};
export declare type DeleteEndpointRequest = {
    id: string;
};
export declare type Endpoint = {
    /**
     * id for this endpoint
     */
    id: string;
    /**
     * The url of this endpoint.
     */
    url: string;
    /**
     * The topic id this endpoint is subscribed to.
     */
    topicId: string;
};
export declare class Endpoints {
    private readonly http;
    constructor(http: Requester);
    /**
     * Create a new endpoint with the given name.
     */
    create(req: CreateEndpointRequest): Promise<Endpoint>;
    /**
     * Get a list of all endpoints.
     */
    list(): Promise<Endpoint[]>;
    /**
     * Get a single endpoint.
     */
    get(req: GetEndpointRequest): Promise<Endpoint>;
    /**
     * Update a endpoint
     */
    update(req: UpdateEndpointRequest): Promise<Endpoint>;
    /**
     * Delete a endpoint.
     */
    delete(req: DeleteEndpointRequest): Promise<void>;
}
