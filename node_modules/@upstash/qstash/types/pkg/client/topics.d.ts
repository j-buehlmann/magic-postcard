import { Requester } from "./http.js";
export declare type CreateTopicRequest = {
    /**
     * The name of the topic.
     * Must be unique and only contain alphanumeric, hyphen, underscore and periods.
     */
    name: string;
};
export declare type GetTopicRequest = {
    name: string;
    id?: never;
} | {
    id: string;
    name?: never;
};
export declare type UpdateTopicRequest = {
    id: string;
    name?: string;
};
export declare type DeleteTopicRequest = {
    name: string;
    id?: never;
} | {
    id: string;
    name?: never;
};
export declare type Topic = {
    /**
     * id for this topic
     */
    id: string;
    /**
     * The name of this topic.
     */
    name: string;
    /**
     * A list of all subscribed endpoints
     */
    endpointIds: string[];
};
export declare class Topics {
    private readonly http;
    constructor(http: Requester);
    /**
     * Create a new topic with the given name.
     */
    create(req: CreateTopicRequest): Promise<Topic>;
    /**
     * Get a list of all topics.
     */
    list(): Promise<Topic[]>;
    /**
     * Get a single topic by name or id.
     */
    get(req: GetTopicRequest): Promise<Topic>;
    /**
     * Update a topic
     */
    update(req: UpdateTopicRequest): Promise<Topic>;
    /**
     * Delete a topic by name or id.
     */
    delete(req: DeleteTopicRequest): Promise<void>;
}
