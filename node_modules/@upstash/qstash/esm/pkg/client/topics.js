export class Topics {
    constructor(http) {
        Object.defineProperty(this, "http", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.http = http;
    }
    /**
     * Create a new topic with the given name.
     */
    async create(req) {
        return await this.http.request({
            method: "POST",
            path: ["v1", "topics"],
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ name: req.name }),
        });
    }
    /**
     * Get a list of all topics.
     */
    async list() {
        return await this.http.request({
            method: "GET",
            path: ["v1", "topics"],
            headers: { "Content-Type": "application/json" },
        });
    }
    /**
     * Get a single topic by name or id.
     */
    async get(req) {
        const idOrName = req.id ?? req.name;
        if (!idOrName) {
            throw new Error("Either id or name must be provided");
        }
        return await this.http.request({
            method: "GET",
            path: ["v1", "topics", idOrName],
            headers: { "Content-Type": "application/json" },
        });
    }
    /**
     * Update a topic
     */
    async update(req) {
        return await this.http.request({
            method: "PUT",
            path: ["v1", "topics", req.id],
            body: JSON.stringify({ name: req.name }),
            headers: { "Content-Type": "application/json" },
        });
    }
    /**
     * Delete a topic by name or id.
     */
    async delete(req) {
        const idOrName = req.id ?? req.name;
        if (!idOrName) {
            throw new Error("Either id or name must be provided");
        }
        return await this.http.request({
            method: "DELETE",
            path: ["v1", "topics", idOrName],
            headers: { "Content-Type": "application/json" },
        });
    }
}
